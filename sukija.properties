# Solr:n konfigurointitiedosto Sukijaa varten.
#
# Katso http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
#
# SukijaAsennus.java käyttää tätä asetustiedostoa.


# Kommentoi tämä, jos et halua käyttää HyphenFilter'iä.
# Katso ./sukija-core/src/main/java/peltomaa/sukija/hyphen/HyphenFilter.java
#
sukija.HyphenFilter = peltomaa.sukija.hyphen.HyphenFilterFactory




# Luetaan sanat tiedostoista.
#
# Valitse yksi näistä tai mikä tahansa Solr:n TokenizerFactory
# tai voit tehdä oman luokkasi.
#
#sukija.Tokenizer = peltomaa.sukija.finnish.FinnishTokenizerFactory

# Tämä poistaa LaTeX-komentoja LaTeX-tiedostoista.
sukija.Tokenizer = peltomaa.sukija.finnish.HVTokenizerFactory

# Tämä on huono valinta, koska se katkaisee sanat yhdysviivan kohdalta
# eli esim. "linja-autosta" tulee kaksi sanaa "linja" ja "autosta".
#sukija.Tokenizer = org.apache.lucene.analysis.standard.StandardTokenizerFactory



# Muutetaan sanat perusmuotoon. Valitse yksi näistä.
#
# Malaga-luokka käyttävät Suomi-Malagan Sukija-versiota sanojen muuttamiseen
# perusmuotoon, Voikko-luokka käyttää Libvoikkoa. Libvoikon käyttämä
# morfologia riippuu siitä, miten se on käännetty.

#sukija.Morphology = peltomaa.sukija.malaga.MalagaMorphologyFilterFactory
sukija.Morphology = peltomaa.sukija.voikko.VoikkoMorphologyFilterFactory

# Malaga-luokkien konfigurointi.
sukija.malagaProjectFile = ${user.home}/.sukija/suomi.pro


# Voikko-luokkien konfigurointi. Jotta tämä toimisi, libvoikko pitää
# olla käännetty komennoilla (hakemistossa corevoikko/libvoikko)
# ./autogen.sh
# ./configure --enable-vfst --prefix=/$HOME/vvfst --with-dictionary-path=$HOME/vvfst/voikkodict
# make; make install
#
sukija.voikko.dictionary = fi
sukija.voikko.path = ${user.home}/vvfst/voikkodict
sukija.voikko.libvoikkoPath = ${user.home}/vvfst/lib/libvoikko.so
sukija.voikko.libraryPath = ${user.home}/vvfst/lib


# Jos haluat, että Sukija yrittää korjata kirjoitusvirheitä, ota kommenttimerkki pois.
# Jos morfologialuokka ei tunnista sanaa, Suggestion-luokissa sanaan tehdään
# muutoksia (esimerkiksi muutetaan w v:ksi) ja tunnistusta yritetään uudestaan.
# Tämä ei ole sama asia kuin Voikon oikeinkirjoituksen korjausehdotukset!
#
# Konfigurointitiedosto.
#sukija.suggestionFile = suggestions.xml

# Jos success on true, indeksoidaan vain ne sanat, joille löytyy perusmuoto,
# jos se on false, indeksoidaan myös tunnistamattomat sanat (jolloin esim.
# merkkijonon "wewfwsfwef" perusmuodoksi tulee "wewfwsfwef").
#sukija.success = false



# Katso
# http://wiki.apache.org/solr/DataImportHandler
# http://wiki.apache.org/solr/DataImportHandler#FileListEntityProcessor (parametrit baseDir ym)
# http://wiki.apache.org/solr/TikaEntityProcessor
#
# Indeksoitavat hakemistot, kaksoispisteillä toisistaan erotettuina.
sukija.baseDir = ${user.home}/Asiakirjat/Lönnrot
#sukija.baseDir = ${user.home}/Asiakirjat
#sukija.baseDir = ${user.home}/Asiakirjat:/usr/local/data

sukija.fileName = .*
sukija.excludes = (?u)(?i).*[.](au|bmp|bz2|class|gif|gpg|gz|jar|jpg|jpeg|m|o|png|tif|tiff|wav|zip)$
sukija.recursive = true


# Poista kommenttimerkit, jos haluat indeksoida synonyymejä.
# Katso http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters#solr.SynonymFilterFactory
#sukija.synonyms = synonyms.txt
#sukija.ignoreCase = true
#sukija.expand = false
