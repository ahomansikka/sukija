# Sukijan konfigurointitiedosto
#
# SukijaAsennus.java käyttää tätä asetustiedostoa.


# Muuta nämä, jos Solr:n lähdekoodi ja mavenin hakemisto ovat jossain muualla.
#
sukija.solr = ${user.home}/Lataukset/solr/solr-5.3.1
sukija.maven = ${user.home}/.m2/repository

# Käytä jompaakumpaa seuraavista:

# Asennetaan Sukija Solr:n lähdekoodin hakemistoon.
sukija.sukija = ${sukija.solr}/server/solr/sukija
sukija.jetty = ${sukija.solr}/server/contexts

# Asennetaan Solr palveluna (service).
#sukija.sukija = /var/solr/data/sukija
#sukija.jetty = /opt/solr/server/contexts



# Katso http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters


# Kommentoi tämä, jos et halua käyttää HyphenFilter'iä.
# Katso ./src/main/java/peltomaa/sukija/hyphen/HyphenFilter.java
# Tämä toimii vain luokan peltomaa.sukija.finnish.HVTokenizerFactory kanssa.
#
sukija.HyphenFilter = peltomaa.sukija.hyphen.HyphenFilterFactory



# Luetaan sanat tiedostoista.
#
# Valitse yksi näistä tai mikä tahansa Solr:n TokenizerFactory
# tai voit tehdä oman luokkasi.
#
#sukija.Tokenizer = peltomaa.sukija.finnish.FinnishTokenizerFactory

# Tämä poistaa LaTeX-komentoja LaTeX-tiedostoista.
#sukija.Tokenizer = peltomaa.sukija.finnish.HVTokenizerFactory

# Tämä käyttää Voikon tokens-funktiota, mutta on hidas.
# Jos ignoreNL == true, hylätään sanat, joissa ei ole ainoatakaan kirjainta.
sukija.Tokenizer = peltomaa.sukija.voikko.tokenizer.VoikkoTokenizerFactory
sukija.voikko.tokenizer.ignoreNL = true

# Tämä on huono valinta, koska se katkaisee sanat yhdysviivan kohdalta
# eli esim. "linja-autosta" tulee kaksi sanaa "linja" ja "autosta".
#sukija.Tokenizer = org.apache.lucene.analysis.standard.StandardTokenizerFactory



# Voikon konfigurointi. Jotta tämä toimii, libvoikko pitää
# olla käännetty komennoilla (hakemistossa corevoikko/libvoikko)
# ./autogen.sh
# ./configure --enable-buildtools --enable-vfst --prefix=/$HOME/vvfst --with-dictionary-path=$HOME/vvfst/voikkodict
# make; make install
#
sukija.voikko.language = fi
sukija.voikko.path = ${user.home}/vvfst/voikkodict
sukija.voikko.libvoikkoPath = ${user.home}/vvfst/lib/libvoikko.so
sukija.voikko.libraryPath = ${user.home}/vvfst/lib



# Jos haluat, että Sukija yrittää korjata kirjoitusvirheitä, ota
# kommenttimerkki pois. Jos Voikko ei tunnista sanaa,
# Suggestion-luokissa sanaan tehdään muutoksia (esimerkiksi muutetaan w
# v:ksi) ja tunnistusta yritetään uudestaan. Tämä ei ole sama asia kuin
# Voikon oikeinkirjoituksen korjausehdotukset!
#
# Konfigurointitiedosto.
sukija.suggestionFile = suggestions.xml


# Jos successOnly on true, indeksoidaan vain ne sanat, joille löytyy perusmuoto,
# jos se on false, indeksoidaan myös tunnistamattomat sanat (jolloin esim.
# merkkijonon "wewfwsfwef" perusmuodoksi tulee "wewfwsfwef").
sukija.successOnly = false


# Solr:ään voi laittaa indeksoitavaa aineistoa monella eri tavalla. Koska käytän
# Sukijaa kovalevyni indeksoitiin, tämä konfiguroi Sukijan sitä varten.
#
# Katso
# http://wiki.apache.org/solr/DataImportHandler
# http://wiki.apache.org/solr/DataImportHandler#FileListEntityProcessor (parametrit baseDir ym)
# http://wiki.apache.org/solr/TikaEntityProcessor
#
# Indeksoitavat hakemistot, kaksoispisteillä toisistaan erotettuina.
#sukija.baseDir = ${user.home}/Asiakirjat
#sukija.baseDir = ${user.home}/Asiakirjat:/usr/local/data

sukija.fileName = .*
sukija.excludes = (?u)(?i).*[.](au|bmp|bz2|class|gif|gpg|gz|jar|jpg|jpeg|m|o|png|tif|tiff|wav|zip)$
sukija.recursive = true



# Poista kommenttimerkit, jos haluat indeksoida synonyymejä.
# Katso http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters#solr.SynonymFilterFactory
#sukija.synonyms = synonyms.txt
#sukija.ignoreCase = true
#sukija.expand = false
